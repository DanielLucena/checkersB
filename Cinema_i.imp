/* Cinema_i
 * Author: daniel
 * Creation date: 25/06/2025
 */

IMPLEMENTATION Cinema_i
    
REFINES Cinema
    
CONCRETE_VARIABLES
    filmes_i
    ,salas_i
    ,salaHasCapacidade_i
    ,salaHasHorarios_i
    , sessao_i
    ,ingressos_vendidos_i
//    ,ingressos_meia_i


     ,horaAtual_i
     , card_filmes
     ,card_salas

//     ,acentos_sessao_i




INVARIANT

    filmes_i: FILME --> BOOL
    & filmes = dom(filmes_i |> {TRUE})
    & card_filmes : 0..limit_filmes
    & card_filmes = card(filmes)
    & card_filmes = card(dom(filmes_i |> {TRUE}))
    
    
    & salas_i: SALA --> BOOL
    & salas = dom(salas_i |> {TRUE})
    &card_salas : 0..limit_salas
    & card_salas = card(salas)
    & card_salas = card(dom(salas_i|>{TRUE}))
    
    
    & salaHasCapacidade_i: SALA --> 0..limit_capacidade
    & salaHasCapacidade = salaHasCapacidade_i |>> {0}
    
    
    
    & salaHasHorarios_i: SALA*HORARIO --> BOOL
    & salaHasHorarios = dom(salaHasHorarios_i |> {TRUE})  
    
    
    & sessao_i: SALA*HORARIO --> FILME
    & sessao = sessao_i |>> {dummyFilme}
    
    // Refinamento da hora atual
    & horaAtual_i : HORARIO 
    & horaAtual = horaAtual_i 
    

    & dom(sessao_i |>> {0}) = dom(salaHasHorarios_i |> {TRUE})
    //todo: ele ta chiando por algum motivo
    & dom(sessao) = dom(sessao_i |>> {dummyFilme})
    
    
     
    // Refinamento dos dados de ingressos e assentos
    //todo: falta especificar cada um deles ainda e relacionar com a maquina abstrata
    //todo: talvez usar a ideia de dummy colocando o dummy como zero e  toda operacao ele checa primeiro se é o dummy se for ai ele coloca 1 se n for o dummy ele so vai somando normal, teria que toda vez q zerar o dia ele iria para o dummy.
    & ingressos_vendidos_i : (SALA * HORARIO) --> 0..limit_capacidade
//    & !(ss,hh).( ss: SALA & hh: HORARIO | (ss,hh) : dom(sessao) => 
//      ingressos_vendidos_i(ss,hh) <= salaHasCapacidade_i(ss) )
//    
    
    
    
//    & ingressos_meia_i : SALA * HORARIO --> 0..limit_capacidade
//    & acentos_sessao_i : SALA*HORARIO *FILME --> (0..limit_capacidade)   





VALUES //valores para os SETs
    limit_capacidade = 10;
    limit_salas = 5;
    limit_filmes = 10;
    limit_turnos = 2;
    horario_max = 24;
 
  
    
// todo: ver essa bomba
//     ultima_sala= limit_salas -1;
//     ultimo_filme = limit_filmes-1;
    
    SALA = 0..limit_salas; // MUDAR PARA 0..limit_salas ou 0..limit_salas-1
    FILME = 0..limit_filmes; // MUDAR PARA 0..limit_filmes ou 0..limit_filmes-1
    HORARIO = 0..horario_max;
    ASSENTO = 0..limit_capacidade;
    dummyFilme = 0;
    dummyAssento = 0


INITIALISATION
    filmes_i := FILME*{FALSE};
    salas_i := SALA*{FALSE};
    card_filmes := 0;
    card_salas := 0;

    
    salaHasCapacidade_i := SALA*{0};
            
    salaHasHorarios_i := (SALA*HORARIO)*{FALSE};
    sessao_i := (SALA*HORARIO)*{dummyFilme};
    

    horaAtual_i := 0;
   ingressos_vendidos_i := (SALA * HORARIO) * {0}
//    ingressos_meia_i := (SALA * HORARIO) * {0}
//    acentos_sessao_i := ((SALA*HORARIO)*{dummyFilme}) *(0..limit_capacidade)

    

        

OPERATIONS
    //OK
    AdicionarFilme(ff) =
    BEGIN
        filmes_i(ff) := TRUE;
        card_filmes := card_filmes+1
     END;

    //OK
    RemoverFilme(ff) =
    BEGIN
        filmes_i(ff) := FALSE;
        card_filmes := card_filmes-1
     END;
   

    //OK
    ff <--QueryFilmes =
    BEGIN
       VAR ii, filmeAtual IN
            ii := 0;
            filmeAtual:= FALSE;
           WHILE ii < limit_filmes DO
              filmeAtual := filmes_i(ii);
               ff(ii) := filmeAtual;
               ii := ii + 1
           INVARIANT
               ii: 0..limit_filmes
               & ii : FILME
               & filmeAtual: BOOL
               & ii: dom(filmes_i)
               & ff: 0..limit_filmes-1 --> BOOL
               //todo: Talvez pegar isso e jogar no query salas
               & !jj.(  jj:0..(ii-1) => ff(jj) = filmes_i(jj) )
           VARIANT
               limit_filmes - ii
           END
       END
    END;
    
    //Sala
    //OK
    AdicionarSala(ss,tt)=
      BEGIN
           salas_i(ss) := TRUE;
           salaHasCapacidade_i(ss) := tt;
           card_salas := card_salas+1
        END;

    //OK
    RemoverSala(ss)=
        BEGIN
           salas_i(ss) := FALSE;
           salaHasCapacidade_i(ss) := 0;
           card_salas:= card_salas-1
        END;


    //OK
    ff <--QuerySalas =
    BEGIN
        VAR cc IN
           cc:=0;
           ff := SALA*{FALSE};
           WHILE cc < limit_salas DO
              ff(cc) := salas_i(cc);
              cc := cc+1
           INVARIANT
              cc:0..limit_salas
              &cc:dom(salas_i)
              &ff: SALA --> BOOL
              & !jj.(  jj:0..(cc-1) => ff(jj) = salas_i(jj) )
    
           VARIANT 
              limit_salas - cc
           END
        END
    END;
    
       
    
    //SalaHasHorario 
    //OK
    DisponibilizarSalaEmHorarios(ss,hh)=
    BEGIN
        salaHasHorarios_i(ss,hh) := TRUE
    END;
        
     
    //OK 
    IndisponibilizarSalaEmHorarios(ss,hh) =
    BEGIN
        salaHasHorarios_i(ss,hh) := FALSE
    END;
        

      
    // Sessao
    AdicionarSessao(ss, hh, ff) = 
    BEGIN
           sessao_i(ss, hh) := ff;
//           ingressos_vendidos_i(ss, hh) := 0;
//           ingressos_meia_i(ss, hh) := 0;
           VAR ii, capacidadeSala IN
               ii := 0;
               capacidadeSala := salaHasCapacidade_i(ss);
               WHILE ii < capacidadeSala DO
//                   acentos_sessao_i(ss, hh, ii) := FALSE;
                   ii := ii + 1
               INVARIANT ii : 0..capacidadeSala
               VARIANT capacidadeSala - ii
               END
           END
    
       END;

    
    RemoverSessao(ss,hh) =
    BEGIN
        sessao_i(ss, hh) := dummyFilme
    END;
     

     //Passagem de temp
     Passar_Hora =
     BEGIN
          IF horaAtual_i < horario_max THEN
              horaAtual_i := horaAtual_i + 1
          ELSE
              horaAtual_i := 0;
              
              salaHasHorarios_i := (SALA * HORARIO) * {FALSE};
              
              sessao_i := (SALA * HORARIO) * {dummyFilme};
              
              ingressos_vendidos_i := (SALA * HORARIO) * {0}
//              ingressos_meia_i := (SALA * HORARIO) * {0}
//              acentos_sessao_i := ((SALA * HORARIO) * (0..limit_capacidade)) * {FALSE}
          END
      END;
      
      
    // Ingresso
    //TODO: REVER ISSO E PRINCIPALMENTE O INVARIANTE
  ComprarIngresso(ff,hh,tt,aa)=
    BEGIN
        // Encontrar sala que exibe o filme no horário
        VAR ss, filmeAtual IN
            ss := 0;
            filmeAtual:= sessao_i(ss,hh);
            WHILE ss < limit_salas & filmeAtual /= ff DO
                ss := ss + 1
            INVARIANT ss:0..limit_salas
            VARIANT limit_salas - ss
            END;
            
            // Registrar venda
            ingressos_vendidos_i(ss, hh) := ingressos_vendidos_i(ss, hh) + 1
        END
    END;
    
    
   ii<--ConsultarIngressosDisponiveisPorSessao(ss,hh)=
    ii := salaHasCapacidade_i(ss) - ingressos_vendidos_i(ss, hh);
    
ii<--ConsultarIngressosCompradosPorSessao(ss,hh)=
    ii := ingressos_vendidos_i(ss, hh);


//OK
rr <-- visualizarFilmesEmCartaz =
  BEGIN
    VAR sala, horario, filmeSessao IN
      sala := 0;
      rr := FILME * {FALSE};

      WHILE sala < limit_salas DO
        horario := 0;
        WHILE horario < horario_max DO
          filmeSessao := sessao_i(sala, horario);
          IF filmeSessao /= dummyFilme THEN
            rr(filmeSessao) := TRUE
          END;
          horario := horario + 1
        INVARIANT
          horario : 0..horario_max 
          & filmeSessao : FILME 
          & rr : FILME --> BOOL
          & !kk.(kk : 0..horario-1 =>
         (sessao_i(sala, kk) /= dummyFilme => rr(sessao_i(sala, kk)) = TRUE))
        VARIANT
          horario_max - horario
        END;
        sala := sala + 1
      INVARIANT
        sala : 0..limit_salas 
        & rr : FILME --> BOOL
        & !(ss,hh).(ss : 0..sala-1 & hh : 0..horario_max-1 => (sessao_i(ss, hh) /= dummyFilme => rr(sessao_i(ss, hh)) = TRUE))
      VARIANT
        limit_salas - sala
      END
      END
  END;


//    skip;

   
   //todo: REVER
   rr <-- VisualizarFilmesPorHorario(hh) =
   BEGIN
     VAR sala, filmeSessao IN
       sala := 0;
       rr := FILME * {FALSE};
 
       WHILE sala < limit_salas DO
         filmeSessao := sessao_i(sala, hh);
         IF filmeSessao /= dummyFilme THEN
           rr(filmeSessao) := TRUE
         END;
         sala := sala + 1
       INVARIANT
         sala : 0..limit_salas
         & rr : FILME --> BOOL
         & !ss.(ss : 0..sala-1 => (sessao_i(ss, hh) /= dummyFilme => rr(sessao_i(ss, hh)) = TRUE))
       VARIANT
         limit_salas - sala
       END
   END
   END;
 
   //todo: REVER
    rr <-- VisualizarHorariosPorFilme(ff) =
        BEGIN
            VAR sala, horario, filmeSessao IN
                sala := 0;
                rr := HORARIO * {FALSE};
                WHILE sala < limit_salas DO
                horario := 0;
                WHILE horario < horario_max DO
                filmeSessao := sessao_i(sala, horario);
                IF filmeSessao = ff THEN
                rr(horario) := TRUE
                END;
                horario := horario + 1
                INVARIANT
                horario : 0..horario_max
                & rr : HORARIO --> BOOL
                & !hh.(hh : 0..horario-1 => (sessao_i(sala, hh) = ff => rr(hh) = TRUE))
                VARIANT
                horario_max - horario
                END;
                sala := sala + 1
                INVARIANT
                sala : 0..limit_salas
                & rr : HORARIO --> BOOL
                & !(ss,hh).(ss : 0..sala-1 & hh : 0..horario_max-1 => (sessao_i(ss, hh) = ff => rr(hh) = TRUE))
                VARIANT
                limit_salas - sala
                END
            END
        END;
   
   ok<-- pre_adicionarFilme(ff) =
    BEGIN
        VAR filme IN
            filme := filmes_i(ff);
            IF filme = FALSE & ff/=dummyFilme & card_filmes < limit_filmes & ff<=limit_filmes
            THEN ok := TRUE
            ELSE ok := FALSE
            END
        END
        
    END;
     
   ok <-- pre_removerFilme(ff) =
  BEGIN
    VAR filme, ii, jj, emSessao, filmeAtual IN
      filme := filmes_i(ff);
      ii := 0;
      jj := 0;
      emSessao := FALSE;
      WHILE ii < limit_salas & emSessao = FALSE DO
        jj := 0;
        WHILE jj < horario_max & emSessao = FALSE DO
            filmeAtual := sessao_i(ii,jj);
              IF filmeAtual = ff THEN
                emSessao := TRUE
              END;
              jj := jj + 1
        INVARIANT
          jj : 0..horario_max+1 
          & emSessao : BOOL 
          & ii : 0..limit_salas 
          & !kk.(kk : 0..jj-1 => sessao_i(ii, kk) /= ff)
        VARIANT
          horario_max - jj
        END;
        ii := ii + 1
      INVARIANT
        ii : 0..limit_salas+1 
        &  emSessao : BOOL 
        & !kk.(kk : 0..ii-1 => !ll.(ll : 0..horario_max => sessao_i(kk, ll) /= ff))
      VARIANT
        limit_salas - ii
      END;
      IF filme = TRUE 
          & ff <= limit_filmes 
          & ff /= dummyFilme 
          & emSessao = FALSE THEN
        ok := TRUE
      ELSE
        ok := FALSE
      END
      END
  END;

   //OK    
   ok<-- pre_adicionarSala(ss, tt) =
   BEGIN
       VAR sala IN
           sala := salas_i(ss);
           IF sala = FALSE & tt>= 1 & tt <= limit_capacidade & card_salas < limit_salas & ss<= limit_salas
           THEN ok := TRUE
           ELSE ok := FALSE
           END
       END
   END;
   
           
   //OK
   ok <-- pre_removerSala(ss)= 
    BEGIN
       VAR salaExists, hh, hasHorario,slotAtual IN
           salaExists := salas_i(ss);
           hh := 0;
           hasHorario := FALSE;
           WHILE hh < horario_max & hasHorario = FALSE
           DO
               slotAtual := salaHasHorarios_i(ss,hh);
               IF slotAtual = TRUE
               THEN hasHorario := TRUE
               END;
               hh := hh + 1
           INVARIANT
               hh: NAT & hasHorario:BOOL & slotAtual:BOOL & hh <= horario_max
               & hasHorario = TRUE <=> (#jj.(jj : 0..hh-1 & salaHasHorarios_i(ss,jj) = TRUE))
           VARIANT
               horario_max - hh
           END;


           IF salaExists = TRUE & ss<= limit_salas & hasHorario = FALSE
           THEN ok := TRUE
           ELSE ok := FALSE
           END
       END
   END;

   
   
//OK
   ok <-- pre_disponibilizarSalaEmHorarios(ss, hh) =
    BEGIN
        VAR disponivel, existeSala, ii, jj, temHorario IN
            existeSala := salas_i(ss);
            disponivel:= salaHasHorarios_i(ss,hh);
            ii := 0;
            jj := 0;
            WHILE jj <= horario_max & ii < limit_turnos
            DO  temHorario := salaHasHorarios_i(ss,jj);
                    IF temHorario = TRUE
                    THEN ii:= ii+1
                    END;
                    jj:=jj+1
            INVARIANT ii: NAT & jj:NAT & temHorario:BOOL & ii: 0..limit_turnos
                & jj: 0..horario_max+1
                & ii = card({hh | hh : 0..jj-1 & salaHasHorarios_i(ss, hh) = TRUE})
            VARIANT horario_max - jj
            END;
            IF disponivel = FALSE & existeSala = TRUE & ii< limit_turnos & hh<= horario_max & hh >=0
            THEN ok:= TRUE
             ELSE ok := FALSE
             END
         END
            
    END;
   
   //ACHO que OK
   ok <-- pre_indisponibilizarSalaEmHorarios(ss, hh) =
       BEGIN
        VAR disponivel, existeSala, filmeDaSessao IN
            existeSala := salas_i(ss);
            disponivel:= salaHasHorarios_i(ss,hh);
            filmeDaSessao:= sessao_i(ss,hh);     
            IF disponivel = TRUE & existeSala = TRUE & filmeDaSessao = dummyFilme &  hh<= horario_max & hh >=0
            THEN ok:= TRUE
             ELSE ok := FALSE
             END
         END
            
    END;

   
ok <-- pre_adicionarSessao(ss, hh, ff) =
     BEGIN
        VAR existeSalaHorario, existeSala, filmeAtual, ii, passandoEmOutraSala IN
            existeSala := salas_i(ss);
            existeSalaHorario:= salaHasHorarios_i(ss,hh);
            filmeAtual:= sessao_i(ss,hh);
            ii := 0;
            passandoEmOutraSala := FALSE;
            WHILE ii < limit_salas & passandoEmOutraSala = FALSE
                DO
                VAR filmeSalaAtual IN
                    filmeSalaAtual := sessao_i(ii, hh);
                    IF filmeSalaAtual = ff 
                    THEN passandoEmOutraSala := TRUE
                    END;
                    ii := ii + 1
                END
                INVARIANT
                    ii:NAT & passandoEmOutraSala:BOOL & ii<= limit_salas
                    & passandoEmOutraSala = TRUE <=> (#jj.(jj : 0..ii-1 & sessao_i(jj, hh) = filmeAtual))
                VARIANT
                    limit_salas - ii
                END;

            IF existeSalaHorario = TRUE 
                & ff /= dummyFilme 
                & filmeAtual = dummyFilme 
                & passandoEmOutraSala = FALSE
            THEN ok:= TRUE
             ELSE ok := FALSE
             END
         END

    END; 
    
    //todo: pre condicao de ingresso vendido
     ok <-- pre_removerSessao(ss, hh) =
   BEGIN
       VAR existeSalaHorario, filmeAtual IN
           existeSalaHorario:= salaHasHorarios_i(ss,hh);
           filmeAtual := sessao_i(ss,hh);
       IF existeSalaHorario = TRUE 
                & filmeAtual /= dummyFilme 
            THEN ok:= TRUE
             ELSE ok := FALSE
             END
         END
            
    END;
   
   
   ok <-- pre_comprarIngresso(ff, hh, tt,aa) =
    BEGIN
//        // Verificar se sessão existe e há lugares disponíveis
//        VAR ss, capacidade, vendidos, filmeAtual IN
//            ss := 0;
//            filmeAtual := sessao_i(ss, hh);
//            WHILE ss < limit_salas & filmeAtual /= ff DO
//                ss := ss + 1
//            
//        INVARIANT ss: NAT
//        VARIANT limit_salas - ss
//           END;
//            
//            IF ss < limit_salas THEN
//                capacidade := salaHasCapacidade_i(ss);
//                vendidos := ingressos_vendidos_i(ss, hh);
//                ok := bool(vendidos < capacidade)
//            ELSE
//                ok := FALSE
//            END
//        END
skip
    END;
   
   ok <-- pre_consultarIngressosPorSessao(ss, hh) =
    skip

END